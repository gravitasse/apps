# Config file for collectd(1).
#
# Some plugins need additional configuration and are disabled by default.
# Please read collectd.conf(5) for details.
#
# You should also read /usr/share/doc/collectd-core/README.Debian.plugins
# before enabling any more plugins.

##############################################################################
# Global                                                                     #
#----------------------------------------------------------------------------#
# Global settings for the daemon.                                            #
##############################################################################

#Hostname "localhost"
FQDNLookup true
#BaseDir "/var/lib/collectd"
#PluginDir "/usr/lib/collectd"
#TypesDB "/usr/share/collectd/types.db" "/etc/collectd/my_types.db"
TypesDB "/usr/share/collectd/types.db" "/etc/collectd/portstat.db"
#----------------------------------------------------------------------------#
# When enabled, plugins are loaded automatically with the default options    #
# when an appropriate <Plugin ...> block is encountered.                     #
# Disabled by default.                                                       #
#----------------------------------------------------------------------------#
#AutoLoadPlugin false

#----------------------------------------------------------------------------#
# Interval at which to query values. This may be overwritten on a per-plugin #
# base by using the 'Interval' option of the LoadPlugin block:               #
#   <LoadPlugin foo>                                                         #
#       Interval 60                                                          #
#   </LoadPlugin>                                                            #
#----------------------------------------------------------------------------#
Interval 10

Timeout 10
#ReadThreads 5
#WriteThreads 5

# Limit the size of the write queue. Default is no limit. Setting up a limit
# is recommended for servers handling a high volume of traffic.
#WriteQueueLimitHigh 1000000
#WriteQueueLimitLow   800000

##############################################################################
# Logging                                                                    #
#----------------------------------------------------------------------------#
# Plugins which provide logging functions should be loaded first, so log     #
# messages generated when loading or configuring other plugins can be        #
# accessed.                                                                  #
##############################################################################

#LoadPlugin logfile
LoadPlugin syslog
#LoadPlugin redis
#<Plugin logfile>
#	LogLevel "info"
#	File STDOUT
#	Timestamp true
#	PrintSeverity false
#</Plugin>

<Plugin syslog>
	LogLevel info
</Plugin>

##############################################################################
# LoadPlugin section                                                         #
#----------------------------------------------------------------------------#
# Specify what features to activate.                                         #
##############################################################################

#LoadPlugin aggregation
#LoadPlugin amqp
LoadPlugin apache
#LoadPlugin apcups
#LoadPlugin ascent
LoadPlugin battery
#LoadPlugin bind
#LoadPlugin cgroups
#LoadPlugin conntrack
#LoadPlugin contextswitch
LoadPlugin cpu
#LoadPlugin cpufreq
#LoadPlugin csv
#LoadPlugin curl
LoadPlugin curl_json
#LoadPlugin curl_xml
#LoadPlugin dbi
LoadPlugin df
LoadPlugin disk
#LoadPlugin dns
#LoadPlugin email
LoadPlugin entropy
#LoadPlugin ethstat
#LoadPlugin exec
#LoadPlugin filecount
#LoadPlugin fscache
#LoadPlugin gmond
#LoadPlugin hddtemp
LoadPlugin interface
#LoadPlugin ipmi
#LoadPlugin iptables
#LoadPlugin ipvs
LoadPlugin irq
#LoadPlugin java
#LoadPlugin libvirt
LoadPlugin load
#LoadPlugin lvm
#LoadPlugin madwifi
#LoadPlugin mbmon
#LoadPlugin md
#LoadPlugin memcachec
#LoadPlugin memcached
LoadPlugin memory
#LoadPlugin modbus
#LoadPlugin multimeter
#LoadPlugin mysql
#LoadPlugin netlink
#LoadPlugin network
#LoadPlugin nfs
#LoadPlugin nginx
#LoadPlugin notify_desktop
#LoadPlugin notify_email
#LoadPlugin ntpd
#LoadPlugin numa
#LoadPlugin nut
#LoadPlugin olsrd
#LoadPlugin openvpn
#<LoadPlugin perl>
#	Globals true
#</LoadPlugin>
#LoadPlugin pinba
LoadPlugin ping
#LoadPlugin postgresql
#LoadPlugin powerdns
LoadPlugin processes
#LoadPlugin protocols
<LoadPlugin python>
	Globals true
</LoadPlugin>
#LoadPlugin rrdcached
LoadPlugin rrdtool
#LoadPlugin sensors
#LoadPlugin serial
#LoadPlugin snmp
#LoadPlugin statsd
LoadPlugin swap
#LoadPlugin table
#LoadPlugin tail
#LoadPlugin tail_csv
#LoadPlugin tcpconns
#LoadPlugin teamspeak2
#LoadPlugin ted
#LoadPlugin thermal
#LoadPlugin tokyotyrant
#LoadPlugin unixsock
#LoadPlugin uptime
LoadPlugin users
#LoadPlugin uuid
#LoadPlugin varnish
#LoadPlugin vmem
#LoadPlugin vserver
#LoadPlugin wireless
LoadPlugin write_graphite
#LoadPlugin write_http
#LoadPlugin write_riemann

##############################################################################
# Plugin configuration                                                       #
#----------------------------------------------------------------------------#
# In this section configuration stubs for each plugin are provided. A desc-  #
# ription of those options is available in the collectd.conf(5) manual page. #
##############################################################################

#<Plugin "aggregation">
#	<Aggregation>
#		#Host "unspecified"
#		Plugin "cpu"
#		PluginInstance "/[0,2,4,6,8]$/"
#		Type "cpu"
#		#TypeInstance "unspecified"
#
#		SetPlugin "cpu"
#		SetPluginInstance "even-%{aggregation}"
#
#		GroupBy "Host"
#		GroupBy "TypeInstance"
#
#		CalculateNum false
#		CalculateSum false
#		CalculateAverage true
#		CalculateMinimum false
#		CalculateMaximum false
#		CalculateStddev false
#	</Aggregation>
#</Plugin>

#<Plugin amqp>
#	<Publish "name">
#		Host "localhost"
#		Port "5672"
#		VHost "/"
#		User "guest"
#		Password "guest"
#		Exchange "amq.fanout"
#		RoutingKey "collectd"
#		Persistent false
#		StoreRates false
#	</Publish>
#</Plugin>

<Plugin apache>
	<Instance "Graphite">
		URL "http://10.1.10.252/server-status?auto"
#		User "admin"
#		Password "secret"
#		VerifyPeer false
#		VerifyHost false
#		CACert "/etc/ssl/ca.crt"
		Server "apache"
	</Instance>
#
#	<Instance "bar">
#		URL "http://some.domain.tld/status?auto"
#		Host "some.domain.tld"
#		Server "lighttpd"
#	</Instance>
</Plugin>

#<Plugin apcups>
#	Host "localhost"
#	Port "3551"
#	ReportSeconds true
#</Plugin>

#<Plugin ascent>
#	URL "http://localhost/ascent/status/"
#	User "www-user"
#	Password "secret"
#	VerifyPeer false
#	VerifyHost false
#	CACert "/etc/ssl/ca.crt"
#</Plugin>

#<Plugin "bind">
#	URL "http://localhost:8053/"
#
#	ParseTime false
#
#	OpCodes true
#	QTypes true
#	ServerStats true
#	ZoneMaintStats true
#	ResolverStats false
#	MemoryStats true
#
#	<View "_default">
#		QTypes true
#		ResolverStats true
#		CacheRRSets true
#
#		Zone "127.in-addr.arpa/IN"
#	</View>
#</Plugin>

#<Plugin "cgroups">
#	CGroup "libvirt"
#	IgnoreSelected false
#</Plugin>

#<Plugin csv>
#	DataDir "/var/lib/collectd/csv"
#	StoreRates false
#</Plugin>

#<Plugin curl>
#	<Page "stock_quotes">
#		URL "http://finance.google.com/finance?q=NYSE%3AAMD"
#		User "foo"
#		Password "bar"
#		VerifyPeer false
#		VerifyHost false
#		CACert "/etc/ssl/ca.crt"
#		MeasureResponseTime false
#		<Match>
#			Regex "<span +class=\"pr\"[^>]*> *([0-9]*\\.[0-9]+) *</span>"
#			DSType "GaugeAverage"
#			Type "stock_value"
#			Instance "AMD"
#		</Match>
#	</Page>
#</Plugin>

<Plugin curl_json>
# See: http://wiki.apache.org/couchdb/Runtime_Statistics
  <URL "http://localhost:8080/public/v1/state/Ports">
    Instance "Ports"
    User "admin"
    Password "snaproute"
    #FpPort-1
    <Key "Objects/0/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort1-IfInOctets"
    </Key>
    <Key "Objects/0/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort1-IfInUcastPkts"
    </Key>
    <Key "Objects/0/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort1-IfInDiscards"
    </Key>
    <Key "Objects/0/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort1-IfInErrors"
    </Key>
    <Key "Objects/0/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort1-IfInUnknownProtos"
    </Key> 
    <Key "Objects/0/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort1-IfOutOctets"
      </Key> 
    <Key "Objects/0/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort1-IfOutUcastPkts"
    </Key>
    <Key "Objects/0/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort1-IfOutDiscards"
    </Key>
    <Key "Objects/0/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort1-IfOutErrors"
    </Key>	
	#FpPort-2
    <Key "Objects/1/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort2-IfInOctets"
    </Key>
    <Key "Objects/1/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort2-IfInUcastPkts"
    </Key>
    <Key "Objects/1/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort2-IfInDiscards"
    </Key>
    <Key "Objects/1/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort2-IfInErrors"
    </Key>
    <Key "Objects/1/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort2-IfInUnknownProtos"
    </Key> 
    <Key "Objects/1/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort2-IfOutOctets"
      </Key> 
    <Key "Objects/1/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort2-IfOutUcastPkts"
    </Key>
    <Key "Objects/1/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort2-IfOutDiscards"
    </Key>
    <Key "Objects/1/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort2-IfOutErrors"
    </Key>	
	#FpPort-3
    <Key "Objects/2/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort3-IfInOctets"
    </Key>
    <Key "Objects/2/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort3-IfInUcastPkts"
    </Key>
    <Key "Objects/2/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort3-IfInDiscards"
    </Key>
    <Key "Objects/2/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort3-IfInErrors"
    </Key>
    <Key "Objects/2/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort3-IfInUnknownProtos"
    </Key> 
    <Key "Objects/2/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort3-IfOutOctets"
      </Key> 
    <Key "Objects/2/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort3-IfOutUcastPkts"
    </Key>
    <Key "Objects/2/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort3-IfOutDiscards"
    </Key>
    <Key "Objects/2/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort3-IfOutErrors"
    </Key>	

	#FpPort-4
    <Key "Objects/3/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort4-IfInOctets"
    </Key>
    <Key "Objects/3/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort4-IfInUcastPkts"
    </Key>
    <Key "Objects/3/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort4-IfInDiscards"
    </Key>
    <Key "Objects/3/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort4-IfInErrors"
    </Key>
    <Key "Objects/3/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort4-IfInUnknownProtos"
    </Key> 
    <Key "Objects/3/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort4-IfOutOctets"
      </Key> 
    <Key "Objects/3/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort4-IfOutUcastPkts"
    </Key>
    <Key "Objects/3/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort4-IfOutDiscards"
    </Key>
    <Key "Objects/3/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort4-IfOutErrors"
    </Key>	
			
	#fpPort5
    <Key "Objects/4/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort5-IfInOctets"
    </Key>
    <Key "Objects/4/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort5-IfInUcastPkts"
    </Key>
    <Key "Objects/4/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort5-IfInDiscards"
    </Key>
    <Key "Objects/4/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort5-IfInErrors"
    </Key>
    <Key "Objects/4/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort5-IfInUnknownProtos"
    </Key> 
    <Key "Objects/4/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort5-IfOutOctets"
      </Key> 
    <Key "Objects/4/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort5-IfOutUcastPkts"
    </Key>
    <Key "Objects/4/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort5-IfOutDiscards"
    </Key>
    <Key "Objects/4/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort5-IfOutErrors"
    </Key>	

	#fpPort6
    <Key "Objects/5/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort6-IfInOctets"
    </Key>
    <Key "Objects/5/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort6-IfInUcastPkts"
    </Key>
    <Key "Objects/5/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort6-IfInDiscards"
    </Key>
    <Key "Objects/5/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort6-IfInErrors"
    </Key>
    <Key "Objects/5/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort6-IfInUnknownProtos"
    </Key> 
    <Key "Objects/5/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort6-IfOutOctets"
      </Key> 
    <Key "Objects/5/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort6-IfOutUcastPkts"
    </Key>
    <Key "Objects/5/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort6-IfOutDiscards"
    </Key>
    <Key "Objects/5/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort6-IfOutErrors"
    </Key>	
     
	#fpPort7
    <Key "Objects/6/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort7-IfInOctets"
    </Key>
    <Key "Objects/6/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort7-IfInUcastPkts"
    </Key>
    <Key "Objects/6/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort7-IfInDiscards"
    </Key>
    <Key "Objects/6/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort7-IfInErrors"
    </Key>
    <Key "Objects/6/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort7-IfInUnknownProtos"
    </Key> 
    <Key "Objects/6/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort7-IfOutOctets"
      </Key> 
    <Key "Objects/6/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort7-IfOutUcastPkts"
    </Key>
    <Key "Objects/6/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort7-IfOutDiscards"
    </Key>
    <Key "Objects/6/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort7-IfOutErrors"
    </Key>	


	#fpPort8
    <Key "Objects/7/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort8-IfInOctets"
    </Key>
    <Key "Objects/7/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort8-IfInUcastPkts"
    </Key>
    <Key "Objects/7/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort8-IfInDiscards"
    </Key>
    <Key "Objects/7/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort8-IfInErrors"
    </Key>
    <Key "Objects/7/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort8-IfInUnknownProtos"
    </Key> 
    <Key "Objects/7/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort8-IfOutOctets"
      </Key> 
    <Key "Objects/7/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort8-IfOutUcastPkts"
    </Key>
    <Key "Objects/7/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort8-IfOutDiscards"
    </Key>
    <Key "Objects/7/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort8-IfOutErrors"
    </Key>	

	#fpPort9
    <Key "Objects/8/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort9-IfInOctets"
    </Key>
    <Key "Objects/8/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort9-IfInUcastPkts"
    </Key>
    <Key "Objects/8/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort9-IfInDiscards"
    </Key>
    <Key "Objects/8/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort9-IfInErrors"
    </Key>
    <Key "Objects/8/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort9-IfInUnknownProtos"
    </Key> 
    <Key "Objects/8/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort9-IfOutOctets"
      </Key> 
    <Key "Objects/8/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort9-IfOutUcastPkts"
    </Key>
    <Key "Objects/8/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort9-IfOutDiscards"
    </Key>
    <Key "Objects/8/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort9-IfOutErrors"
    </Key>	

	#fpPort10
    <Key "Objects/9/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort10-IfInOctets"
    </Key>
    <Key "Objects/9/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort10-IfInUcastPkts"
    </Key>
    <Key "Objects/9/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort10-IfInDiscards"
    </Key>
    <Key "Objects/9/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort10-IfInErrors"
    </Key>
    <Key "Objects/9/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort10-IfInUnknownProtos"
    </Key> 
    <Key "Objects/9/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort10-IfOutOctets"
      </Key> 
    <Key "Objects/9/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort10-IfOutUcastPkts"
    </Key>
    <Key "Objects/9/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort10-IfOutDiscards"
    </Key>
    <Key "Objects/9/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort10-IfOutErrors"
    </Key>	


	#fpPort20
    <Key "Objects/19/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort20-IfInOctets"
    </Key>
    <Key "Objects/19/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort20-IfInUcastPkts"
    </Key>
    <Key "Objects/19/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort20-IfInDiscards"
    </Key>
    <Key "Objects/19/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort20-IfInErrors"
    </Key>
    <Key "Objects/19/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort20-IfInUnknownProtos"
    </Key> 
    <Key "Objects/19/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort20-IfOutOctets"
      </Key> 
    <Key "Objects/19/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort20-IfOutUcastPkts"
    </Key>
    <Key "Objects/19/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort20-IfOutDiscards"
    </Key>
    <Key "Objects/19/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort20-IfOutErrors"
    </Key>	


	#fpPort21
    <Key "Objects/20/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort21-IfInOctets"
    </Key>
    <Key "Objects/20/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort21-IfInUcastPkts"
    </Key>
    <Key "Objects/20/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort21-IfInDiscards"
    </Key>
    <Key "Objects/20/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort21-IfInErrors"
    </Key>
    <Key "Objects/20/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort21-IfInUnknownProtos"
    </Key> 
    <Key "Objects/20/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort21-IfOutOctets"
      </Key> 
    <Key "Objects/20/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort21-IfOutUcastPkts"
    </Key>
    <Key "Objects/20/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort21-IfOutDiscards"
    </Key>
    <Key "Objects/20/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort21-IfOutErrors"
    </Key>	


#fpPort22
    <Key "Objects/21/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort22-IfInOctets"
    </Key>
    <Key "Objects/21/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort22-IfInUcastPkts"
    </Key>
    <Key "Objects/21/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort22-IfInDiscards"
    </Key>
    <Key "Objects/21/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort22-IfInErrors"
    </Key>
    <Key "Objects/21/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort22-IfInUnknownProtos"
    </Key> 
    <Key "Objects/21/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort22-IfOutOctets"
      </Key> 
    <Key "Objects/21/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort22-IfOutUcastPkts"
    </Key>
    <Key "Objects/21/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort22-IfOutDiscards"
    </Key>
    <Key "Objects/21/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort22-IfOutErrors"
    </Key>	

#fpPort23
    <Key "Objects/22/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort23-IfInOctets"
    </Key>
    <Key "Objects/22/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort23-IfInUcastPkts"
    </Key>
    <Key "Objects/22/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort23-IfInDiscards"
    </Key>
    <Key "Objects/22/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort23-IfInErrors"
    </Key>
    <Key "Objects/22/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort23-IfInUnknownProtos"
    </Key> 
    <Key "Objects/22/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort23-IfOutOctets"
      </Key> 
    <Key "Objects/22/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort23-IfOutUcastPkts"
    </Key>
    <Key "Objects/22/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort23-IfOutDiscards"
    </Key>
    <Key "Objects/22/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort23-IfOutErrors"
    </Key>	
 
 #fpPort24
    <Key "Objects/23/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort24-IfInOctets"
    </Key>
    <Key "Objects/23/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort24-IfInUcastPkts"
    </Key>
    <Key "Objects/23/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort24-IfInDiscards"
    </Key>
    <Key "Objects/23/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort24-IfInErrors"
    </Key>
    <Key "Objects/23/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort24-IfInUnknownProtos"
    </Key> 
    <Key "Objects/23/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort24-IfOutOctets"
      </Key> 
    <Key "Objects/23/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort24-IfOutUcastPkts"
    </Key>
    <Key "Objects/23/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort24-IfOutDiscards"
    </Key>
    <Key "Objects/23/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort24-IfOutErrors"
    </Key>	
       
 #fpPort25
    <Key "Objects/24/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort25-IfInOctets"
    </Key>
    <Key "Objects/24/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort25-IfInUcastPkts"
    </Key>
    <Key "Objects/24/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort25-IfInDiscards"
    </Key>
    <Key "Objects/24/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort25-IfInErrors"
    </Key>
    <Key "Objects/24/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort25-IfInUnknownProtos"
    </Key> 
    <Key "Objects/24/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort25-IfOutOctets"
      </Key> 
    <Key "Objects/24/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort25-IfOutUcastPkts"
    </Key>
    <Key "Objects/24/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort25-IfOutDiscards"
    </Key>
    <Key "Objects/24/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort25-IfOutErrors"
    </Key>	
       

#fpPort26
    <Key "Objects/25/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort26-IfInOctets"
    </Key>
    <Key "Objects/25/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort26-IfInUcastPkts"
    </Key>
    <Key "Objects/25/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort26-IfInDiscards"
    </Key>
    <Key "Objects/25/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort26-IfInErrors"
    </Key>
    <Key "Objects/25/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort26-IfInUnknownProtos"
    </Key> 
    <Key "Objects/25/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort26-IfOutOctets"
      </Key> 
    <Key "Objects/25/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort26-IfOutUcastPkts"
    </Key>
    <Key "Objects/25/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort26-IfOutDiscards"
    </Key>
    <Key "Objects/25/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort26-IfOutErrors"
    </Key>	

#fpPort27
    <Key "Objects/26/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort27-IfInOctets"
    </Key>
    <Key "Objects/26/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort27-IfInUcastPkts"
    </Key>
    <Key "Objects/26/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort27-IfInDiscards"
    </Key>
    <Key "Objects/26/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort27-IfInErrors"
    </Key>
    <Key "Objects/26/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort27-IfInUnknownProtos"
    </Key> 
    <Key "Objects/26/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort27-IfOutOctets"
      </Key> 
    <Key "Objects/26/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort27-IfOutUcastPkts"
    </Key>
    <Key "Objects/26/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort27-IfOutDiscards"
    </Key>
    <Key "Objects/26/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort27-IfOutErrors"
    </Key>	
    <Key "Objects/26/Object/NumDownEvents">
      Type "counter"
      Instance "fpPort27-NumDownEvents"
    </Key>	    
    <Key "Objects/26/Object/NumUpEvents">
      Type "counter"
      Instance "fpPort27-NumUpEvents"
    </Key>	 

   
#fpPort28
    <Key "Objects/27/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort28-IfInOctets"
    </Key>
    <Key "Objects/27/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort28-IfInUcastPkts"
    </Key>
    <Key "Objects/27/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort28-IfInDiscards"
    </Key>
    <Key "Objects/27/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort28-IfInErrors"
    </Key>
    <Key "Objects/27/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort28-IfInUnknownProtos"
    </Key> 
    <Key "Objects/27/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort28-IfOutOctets"
      </Key> 
    <Key "Objects/27/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort28-IfOutUcastPkts"
    </Key>
    <Key "Objects/27/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort28-IfOutDiscards"
    </Key>
    <Key "Objects/27/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort28-IfOutErrors"
    </Key>	       

#fpPort29
    <Key "Objects/28/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort29-IfInOctets"
    </Key>
    <Key "Objects/28/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort29-IfInUcastPkts"
    </Key>
    <Key "Objects/28/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort29-IfInDiscards"
    </Key>
    <Key "Objects/28/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort29-IfInErrors"
    </Key>
    <Key "Objects/28/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort29-IfInUnknownProtos"
    </Key> 
    <Key "Objects/28/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort29-IfOutOctets"
      </Key> 
    <Key "Objects/28/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort29-IfOutUcastPkts"
    </Key>
    <Key "Objects/28/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort29-IfOutDiscards"
    </Key>
    <Key "Objects/28/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort29-IfOutErrors"
    </Key>	

	#fpPort30
    <Key "Objects/30/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort30-IfInOctets"
    </Key>
    <Key "Objects/30/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort30-IfInUcastPkts"
    </Key>
    <Key "Objects/30/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort30-IfInDiscards"
    </Key>
    <Key "Objects/30/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort30-IfInErrors"
    </Key>
    <Key "Objects/30/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort30-IfInUnknownProtos"
    </Key> 
    <Key "Objects/30/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort30-IfOutOctets"
      </Key> 
    <Key "Objects/30/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort30-IfOutUcastPkts"
    </Key>
    <Key "Objects/30/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort30-IfOutDiscards"
    </Key>
    <Key "Objects/30/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort30-IfOutErrors"
    </Key>	


	#fpPort31
    <Key "Objects/30/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort31-IfInOctets"
    </Key>
    <Key "Objects/30/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort31-IfInUcastPkts"
    </Key>
    <Key "Objects/30/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort31-IfInDiscards"
    </Key>
    <Key "Objects/30/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort31-IfInErrors"
    </Key>
    <Key "Objects/30/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort31-IfInUnknownProtos"
    </Key> 
    <Key "Objects/30/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort31-IfOutOctets"
      </Key> 
    <Key "Objects/30/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort31-IfOutUcastPkts"
    </Key>
    <Key "Objects/30/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort31-IfOutDiscards"
    </Key>
    <Key "Objects/30/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort31-IfOutErrors"
    </Key>	


#fpPort32
    <Key "Objects/31/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort32-IfInOctets"
    </Key>
    <Key "Objects/31/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort32-IfInUcastPkts"
    </Key>
    <Key "Objects/31/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort32-IfInDiscards"
    </Key>
    <Key "Objects/31/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort32-IfInErrors"
    </Key>
    <Key "Objects/31/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort32-IfInUnknownProtos"
    </Key> 
    <Key "Objects/31/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort32-IfOutOctets"
      </Key> 
    <Key "Objects/31/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort32-IfOutUcastPkts"
    </Key>
    <Key "Objects/31/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort32-IfOutDiscards"
    </Key>
    <Key "Objects/31/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort32-IfOutErrors"
    </Key>	

#fpPort33
    <Key "Objects/32/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort33-IfInOctets"
    </Key>
    <Key "Objects/32/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort33-IfInUcastPkts"
    </Key>
    <Key "Objects/32/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort33-IfInDiscards"
    </Key>
    <Key "Objects/32/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort33-IfInErrors"
    </Key>
    <Key "Objects/32/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort33-IfInUnknownProtos"
    </Key> 
    <Key "Objects/32/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort33-IfOutOctets"
      </Key> 
    <Key "Objects/32/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort33-IfOutUcastPkts"
    </Key>
    <Key "Objects/32/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort33-IfOutDiscards"
    </Key>
    <Key "Objects/32/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort33-IfOutErrors"
    </Key>	
 
 #fpPort34
    <Key "Objects/33/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort34-IfInOctets"
    </Key>
    <Key "Objects/33/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort34-IfInUcastPkts"
    </Key>
    <Key "Objects/33/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort34-IfInDiscards"
    </Key>
    <Key "Objects/33/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort34-IfInErrors"
    </Key>
    <Key "Objects/33/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort34-IfInUnknownProtos"
    </Key> 
    <Key "Objects/33/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort34-IfOutOctets"
      </Key> 
    <Key "Objects/33/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort34-IfOutUcastPkts"
    </Key>
    <Key "Objects/33/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort34-IfOutDiscards"
    </Key>
    <Key "Objects/33/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort34-IfOutErrors"
    </Key>	
       
 #fpPort35
    <Key "Objects/34/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort35-IfInOctets"
    </Key>
    <Key "Objects/34/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort35-IfInUcastPkts"
    </Key>
    <Key "Objects/34/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort35-IfInDiscards"
    </Key>
    <Key "Objects/34/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort35-IfInErrors"
    </Key>
    <Key "Objects/34/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort35-IfInUnknownProtos"
    </Key> 
    <Key "Objects/34/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort35-IfOutOctets"
      </Key> 
    <Key "Objects/34/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort35-IfOutUcastPkts"
    </Key>
    <Key "Objects/34/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort35-IfOutDiscards"
    </Key>
    <Key "Objects/34/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort35-IfOutErrors"
    </Key>	
       

#fpPort36
    <Key "Objects/35/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort36-IfInOctets"
    </Key>
    <Key "Objects/35/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort36-IfInUcastPkts"
    </Key>
    <Key "Objects/35/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort36-IfInDiscards"
    </Key>
    <Key "Objects/35/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort36-IfInErrors"
    </Key>
    <Key "Objects/35/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort36-IfInUnknownProtos"
    </Key> 
    <Key "Objects/35/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort36-IfOutOctets"
      </Key> 
    <Key "Objects/35/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort36-IfOutUcastPkts"
    </Key>
    <Key "Objects/35/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort36-IfOutDiscards"
    </Key>
    <Key "Objects/35/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort36-IfOutErrors"
    </Key>	

#fpPort37
    <Key "Objects/36/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort37-IfInOctets"
    </Key>
    <Key "Objects/36/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort37-IfInUcastPkts"
    </Key>
    <Key "Objects/36/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort37-IfInDiscards"
    </Key>
    <Key "Objects/36/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort37-IfInErrors"
    </Key>
    <Key "Objects/36/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort37-IfInUnknownProtos"
    </Key> 
    <Key "Objects/36/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort37-IfOutOctets"
      </Key> 
    <Key "Objects/36/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort37-IfOutUcastPkts"
    </Key>
    <Key "Objects/36/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort37-IfOutDiscards"
    </Key>
    <Key "Objects/36/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort37-IfOutErrors"
    </Key>	
    
#fpPort38
    <Key "Objects/37/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort38-IfInOctets"
    </Key>
    <Key "Objects/37/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort38-IfInUcastPkts"
    </Key>
    <Key "Objects/37/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort38-IfInDiscards"
    </Key>
    <Key "Objects/37/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort38-IfInErrors"
    </Key>
    <Key "Objects/37/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort38-IfInUnknownProtos"
    </Key> 
    <Key "Objects/37/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort38-IfOutOctets"
      </Key> 
    <Key "Objects/37/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort38-IfOutUcastPkts"
    </Key>
    <Key "Objects/37/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort38-IfOutDiscards"
    </Key>
    <Key "Objects/37/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort38-IfOutErrors"
    </Key>	       

#fpPort39
    <Key "Objects/38/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort39-IfInOctets"
    </Key>
    <Key "Objects/38/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort39-IfInUcastPkts"
    </Key>
    <Key "Objects/38/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort39-IfInDiscards"
    </Key>
    <Key "Objects/38/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort39-IfInErrors"
    </Key>
    <Key "Objects/38/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort39-IfInUnknownProtos"
    </Key> 
    <Key "Objects/38/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort39-IfOutOctets"
      </Key> 
    <Key "Objects/38/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort39-IfOutUcastPkts"
    </Key>
    <Key "Objects/38/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort39-IfOutDiscards"
    </Key>
    <Key "Objects/38/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort39-IfOutErrors"
    </Key>	





	#fpPort40
    <Key "Objects/40/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort40-IfInOctets"
    </Key>
    <Key "Objects/40/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort40-IfInUcastPkts"
    </Key>
    <Key "Objects/40/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort40-IfInDiscards"
    </Key>
    <Key "Objects/40/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort40-IfInErrors"
    </Key>
    <Key "Objects/40/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort40-IfInUnknownProtos"
    </Key> 
    <Key "Objects/40/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort40-IfOutOctets"
      </Key> 
    <Key "Objects/40/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort40-IfOutUcastPkts"
    </Key>
    <Key "Objects/40/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort40-IfOutDiscards"
    </Key>
    <Key "Objects/40/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort40-IfOutErrors"
    </Key>	


	#fpPort41
    <Key "Objects/40/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort41-IfInOctets"
    </Key>
    <Key "Objects/40/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort41-IfInUcastPkts"
    </Key>
    <Key "Objects/40/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort41-IfInDiscards"
    </Key>
    <Key "Objects/40/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort41-IfInErrors"
    </Key>
    <Key "Objects/40/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort41-IfInUnknownProtos"
    </Key> 
    <Key "Objects/40/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort41-IfOutOctets"
      </Key> 
    <Key "Objects/40/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort41-IfOutUcastPkts"
    </Key>
    <Key "Objects/40/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort41-IfOutDiscards"
    </Key>
    <Key "Objects/40/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort41-IfOutErrors"
    </Key>	


#fpPort42
    <Key "Objects/41/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort42-IfInOctets"
    </Key>
    <Key "Objects/41/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort42-IfInUcastPkts"
    </Key>
    <Key "Objects/41/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort42-IfInDiscards"
    </Key>
    <Key "Objects/41/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort42-IfInErrors"
    </Key>
    <Key "Objects/41/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort42-IfInUnknownProtos"
    </Key> 
    <Key "Objects/41/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort42-IfOutOctets"
      </Key> 
    <Key "Objects/41/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort42-IfOutUcastPkts"
    </Key>
    <Key "Objects/41/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort42-IfOutDiscards"
    </Key>
    <Key "Objects/41/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort42-IfOutErrors"
    </Key>	

#fpPort43
    <Key "Objects/42/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort43-IfInOctets"
    </Key>
    <Key "Objects/42/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort43-IfInUcastPkts"
    </Key>
    <Key "Objects/42/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort43-IfInDiscards"
    </Key>
    <Key "Objects/42/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort43-IfInErrors"
    </Key>
    <Key "Objects/42/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort43-IfInUnknownProtos"
    </Key> 
    <Key "Objects/42/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort43-IfOutOctets"
      </Key> 
    <Key "Objects/42/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort43-IfOutUcastPkts"
    </Key>
    <Key "Objects/42/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort43-IfOutDiscards"
    </Key>
    <Key "Objects/42/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort43-IfOutErrors"
    </Key>	
 
 #fpPort44
    <Key "Objects/43/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort44-IfInOctets"
    </Key>
    <Key "Objects/43/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort44-IfInUcastPkts"
    </Key>
    <Key "Objects/43/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort44-IfInDiscards"
    </Key>
    <Key "Objects/43/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort44-IfInErrors"
    </Key>
    <Key "Objects/43/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort44-IfInUnknownProtos"
    </Key> 
    <Key "Objects/43/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort44-IfOutOctets"
      </Key> 
    <Key "Objects/43/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort44-IfOutUcastPkts"
    </Key>
    <Key "Objects/43/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort44-IfOutDiscards"
    </Key>
    <Key "Objects/43/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort44-IfOutErrors"
    </Key>	
       
 #fpPort45
    <Key "Objects/44/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort45-IfInOctets"
    </Key>
    <Key "Objects/44/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort45-IfInUcastPkts"
    </Key>
    <Key "Objects/44/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort45-IfInDiscards"
    </Key>
    <Key "Objects/44/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort45-IfInErrors"
    </Key>
    <Key "Objects/44/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort45-IfInUnknownProtos"
    </Key> 
    <Key "Objects/44/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort45-IfOutOctets"
      </Key> 
    <Key "Objects/44/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort45-IfOutUcastPkts"
    </Key>
    <Key "Objects/44/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort45-IfOutDiscards"
    </Key>
    <Key "Objects/44/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort45-IfOutErrors"
    </Key>	
       

#fpPort46
    <Key "Objects/45/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort46-IfInOctets"
    </Key>
    <Key "Objects/45/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort46-IfInUcastPkts"
    </Key>
    <Key "Objects/45/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort46-IfInDiscards"
    </Key>
    <Key "Objects/45/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort46-IfInErrors"
    </Key>
    <Key "Objects/45/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort46-IfInUnknownProtos"
    </Key> 
    <Key "Objects/45/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort46-IfOutOctets"
      </Key> 
    <Key "Objects/45/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort46-IfOutUcastPkts"
    </Key>
    <Key "Objects/45/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort46-IfOutDiscards"
    </Key>
    <Key "Objects/45/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort46-IfOutErrors"
    </Key>	

#fpPort47
    <Key "Objects/46/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort47-IfInOctets"
    </Key>
    <Key "Objects/46/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort47-IfInUcastPkts"
    </Key>
    <Key "Objects/46/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort47-IfInDiscards"
    </Key>
    <Key "Objects/46/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort47-IfInErrors"
    </Key>
    <Key "Objects/46/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort47-IfInUnknownProtos"
    </Key> 
    <Key "Objects/46/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort47-IfOutOctets"
      </Key> 
    <Key "Objects/46/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort47-IfOutUcastPkts"
    </Key>
    <Key "Objects/46/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort47-IfOutDiscards"
    </Key>
    <Key "Objects/46/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort47-IfOutErrors"
    </Key>	
    
#fpPort48
    <Key "Objects/47/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort48-IfInOctets"
    </Key>
    <Key "Objects/47/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort48-IfInUcastPkts"
    </Key>
    <Key "Objects/47/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort48-IfInDiscards"
    </Key>
    <Key "Objects/47/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort48-IfInErrors"
    </Key>
    <Key "Objects/47/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort48-IfInUnknownProtos"
    </Key> 
    <Key "Objects/47/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort48-IfOutOctets"
      </Key> 
    <Key "Objects/47/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort48-IfOutUcastPkts"
    </Key>
    <Key "Objects/47/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort48-IfOutDiscards"
    </Key>
    <Key "Objects/47/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort48-IfOutErrors"
    </Key>	       

#fpPort49
    <Key "Objects/48/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort49-IfInOctets"
    </Key>
    <Key "Objects/48/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort49-IfInUcastPkts"
    </Key>
    <Key "Objects/48/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort49-IfInDiscards"
    </Key>
    <Key "Objects/48/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort49-IfInErrors"
    </Key>
    <Key "Objects/48/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort49-IfInUnknownProtos"
    </Key> 
    <Key "Objects/48/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort49-IfOutOctets"
      </Key> 
    <Key "Objects/48/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort49-IfOutUcastPkts"
    </Key>
    <Key "Objects/48/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort49-IfOutDiscards"
    </Key>
    <Key "Objects/48/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort49-IfOutErrors"
    </Key>	


#fpPort50
    <Key "Objects/53/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort50-IfInOctets"
    </Key>
    <Key "Objects/53/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort50-IfInUcastPkts"
    </Key>
    <Key "Objects/53/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort50-IfInDiscards"
    </Key>
    <Key "Objects/53/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort50-IfInErrors"
    </Key>
    <Key "Objects/53/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort50-IfInUnknownProtos"
    </Key> 
    <Key "Objects/53/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort50-IfOutOctets"
      </Key> 
    <Key "Objects/53/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort50-IfOutUcastPkts"
    </Key>
    <Key "Objects/53/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort50-IfOutDiscards"
    </Key>
    <Key "Objects/53/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort50-IfOutErrors"
    </Key>	


#fpPort51
    <Key "Objects/58/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort51-IfInOctets"
    </Key>
    <Key "Objects/58/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort51-IfInUcastPkts"
    </Key>
    <Key "Objects/58/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort51-IfInDiscards"
    </Key>
    <Key "Objects/58/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort51-IfInErrors"
    </Key>
    <Key "Objects/58/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort51-IfInUnknownProtos"
    </Key> 
    <Key "Objects/58/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort51-IfOutOctets"
      </Key> 
    <Key "Objects/58/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort51-IfOutUcastPkts"
    </Key>
    <Key "Objects/58/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort51-IfOutDiscards"
    </Key>
    <Key "Objects/58/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort51-IfOutErrors"
    </Key>	

#fpPort52
    <Key "Objects/63/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort52-IfInOctets"
    </Key>
    <Key "Objects/63/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort52-IfInUcastPkts"
    </Key>
    <Key "Objects/63/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort52-IfInDiscards"
    </Key>
    <Key "Objects/63/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort52-IfInErrors"
    </Key>
    <Key "Objects/63/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort52-IfInUnknownProtos"
    </Key> 
    <Key "Objects/63/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort52-IfOutOctets"
      </Key> 
    <Key "Objects/63/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort52-IfOutUcastPkts"
    </Key>
    <Key "Objects/63/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort52-IfOutDiscards"
    </Key>
    <Key "Objects/63/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort52-IfOutErrors"
    </Key>	

 
   #fpPort53
    <Key "Objects/68/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort53-IfInOctets"
    </Key>
    <Key "Objects/68/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort53-IfInUcastPkts"
    </Key>
    <Key "Objects/68/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort53-IfInDiscards"
    </Key>
    <Key "Objects/68/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort53-IfInErrors"
    </Key>
    <Key "Objects/68/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort53-IfInUnknownProtos"
    </Key> 
    <Key "Objects/68/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort53-IfOutOctets"
      </Key> 
    <Key "Objects/68/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort53-IfOutUcastPkts"
    </Key>
    <Key "Objects/68/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort53-IfOutDiscards"
    </Key>
    <Key "Objects/68/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort53-IfOutErrors"
    </Key>	
 

   #fpPort54
    <Key "Objects/73/Object/IfInOctets">
      Type "if_rx_octets"
      Instance "fpPort54-IfInOctets"
    </Key>
    <Key "Objects/73/Object/IfInUcastPkts">
      Type "derive"
      Instance "fpPort54-IfInUcastPkts"
    </Key>
    <Key "Objects/73/Object/IfInDiscards">
      Type "derive"
      Instance "fpPort54-IfInDiscards"
    </Key>
    <Key "Objects/73/Object/IfInErrors">
      Type "if_rx_errors"
      Instance "fpPort54-IfInErrors"
    </Key>
    <Key "Objects/73/Object/IfInUnknownProtos">
      Type "derive"
      Instance "fpPort54-IfInUnknownProtos"
    </Key> 
    <Key "Objects/73/Object/IfOutOctets">
      Type "if_tx_octets"
      Instance "fpPort54-IfOutOctets"
      </Key> 
    <Key "Objects/73/Object/IfOutUcastPkts">
      Type "derive"
      Instance "fpPort54-IfOutUcastPkts"
    </Key>
    <Key "Objects/73/Object/IfOutDiscards">
      Type "derive"
      Instance "fpPort54-IfOutDiscards"
    </Key>
    <Key "Objects/73/Object/IfOutErrors">
      Type "if_tx_errors"
      Instance "fpPort54-IfOutErrors"
    </Key>	
  </URL>

  <URL "http://localhost:8080/public/v1/state/Daemons">
    Instance "Daemons"
      <Key "Objects/*/Object/RestartCount">
       Type "counter"
       Instance "RestartCount"
     </Key>
      <Key "ObjCount">
       Type "gauge"
       Instance "Total"
     </Key>
  </URL>
  
 
 <URL "http://localhost:8080/public/v1/state/BfdSessions">
    Instance "BfdSessions"
      <Key "Objects/*/Object/NumTxPackets">
      Type "derive"
      Instance "TxPackets"
    </Key>
      <Key "Objects/*/Object/NumRxPackets">
      Type "derive"
      Instance "RxPackets"
    </Key>
      <Key "Objects/*/Object/NumTxPackets">
      Type "gauge"
      Instance "TxPackets"
    </Key>
      <Key "Objects/*/Object/NumRxPackets">
      Type "gauge"
      Instance "RxPackets"
    </Key>
  </URL>
<URL "http://localhost:8080/public/v1/state/IPv4RouteHws">
   Instance "IPv4Routes Hw"
     <Key "ObjCount">
     Type "gauge"
     Instance "Total"
   </Key>
 </URL>

 <URL "http://localhost:8080/public/v1/state/IPv4Routes">
    Instance "IPv4Routes"
      <Key "ObjCount">
      Type "gauge"
      Instance "Total"
    </Key>
  </URL>
  <URL "http://localhost:8080/public/v1/state/BGPRoutes">
    Instance "BGPRoutes"
    <Key "ObjCount">
      Type "gauge"
      Instance "Total"
    </Key>
  </URL>
  <URL "http://localhost:8080/public/v1/state/BGPNeighbors">
    Instance "BGPNeighbors"

    <Key "ObjCount">
      Type "gauge"
      Instance "Total"
    </Key>

    <Key "Objects/0/Object/Messages/Sent/Update">
      Type "counter"
      Instance "192.16.0.11-TxUpdates"
    </Key>

    <Key "Objects/1/Object/Messages/Sent/Update">
      Type "counter"
      Instance "192.16.0.13-TxUpdates"
    </Key>

    <Key "Objects/2/Object/Messages/Sent/Update">
      Type "counter"
      Instance "192.16.0.15-TxUpdates"
    </Key>
    <Key "Objects/3/Object/Messages/Sent/Update">
      Type "counter"
      Instance "192.16.0.17-TxUpdates"
    </Key>
    <Key "Objects/4/Object/Messages/Sent/Update">
      Type "counter"
      Instance "192.16.0.19-TxUpdates"
    </Key>
    <Key "Objects/5/Object/Messages/Sent/Update">
      Type "counter"
      Instance "172.16.0.2-TxUpdates"
    </Key>
    <Key "Objects/6/Object/Messages/Sent/Update">
      Type "counter"
      Instance "172.16.0.12-TxUpdates"
    </Key>
    <Key "Objects/7/Object/Messages/Sent/Update">
      Type "counter"
      Instance "172.16.0.22-TxUpdates"
    </Key>


    <Key "Objects/0/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "192.16.0.11-TxNotification"
    </Key>

    <Key "Objects/1/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "192.16.0.13-TxNotification"
    </Key>

    <Key "Objects/2/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "192.16.0.15-TxNotification"
    </Key>
    <Key "Objects/3/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "192.16.0.17-TxNotification"
    </Key>

 <Key "Objects/4/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "192.16.0.19-TxNotification"
    </Key>
    <Key "Objects/5/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "172.16.0.2-TxNotification"
    </Key>
    <Key "Objects/6/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "172.16.0.12-TxNotification"
    </Key>
    <Key "Objects/7/Object/Messages/Sent/Notification">
      Type "counter"
      Instance "172.16.0.22-TxNotification"
    </Key>




 <Key "Objects/0/Object/Messages/Received/Update">
      Type "counter"
      Instance "192.16.0.11-RxUpdates"
    </Key>

    <Key "Objects/1/Object/Messages/Received/Update">
      Type "counter"
      Instance "192.16.0.13-RxUpdates"
    </Key>

    <Key "Objects/2/Object/Messages/Received/Update">
      Type "counter"
      Instance "192.16.0.15-RxUpdates"
    </Key>
    <Key "Objects/3/Object/Messages/Received/Update">
      Type "counter"
      Instance "192.16.0.17-RxUpdates"
    </Key>
 <Key "Objects/4/Object/Messages/Received/Update">
      Type "counter"
      Instance "192.16.0.19-TxUpdates"
    </Key>
    <Key "Objects/5/Object/Messages/Received/Update">
      Type "counter"
      Instance "172.16.0.2-TxUpdates"
    </Key>
    <Key "Objects/6/Object/Messages/Received/Update">
      Type "counter"
      Instance "172.16.0.12-TxUpdates"
    </Key>
    <Key "Objects/7/Object/Messages/Received/Update">
      Type "counter"
      Instance "172.16.0.22-TxUpdates"
    </Key>




    <Key "Objects/0/Object/Messages/Received/Notification">
      Type "counter"
      Instance "192.16.0.11-RxNotification"
    </Key>

    <Key "Objects/1/Object/Messages/Received/Notification">
      Type "counter"
      Instance "192.16.0.13-RxNotification"
    </Key>

    <Key "Objects/2/Object/Messages/Received/Notification">
      Type "counter"
      Instance "192.16.0.15-RxNotification"
    </Key>
    <Key "Objects/3/Object/Messages/Received/Notification">
      Type "counter"
      Instance "192.16.0.17-RxNotification"
    </Key>

 <Key "Objects/4/Object/Messages/Received/Notification">
      Type "counter"
      Instance "192.16.0.19-RxNotification"
    </Key>
    <Key "Objects/5/Object/Messages/Received/Notification">
      Type "counter"
      Instance "172.16.0.2-RxNotification"
    </Key>
    <Key "Objects/6/Object/Messages/Received/Notification">
      Type "counter"
      Instance "172.16.0.12-RxNotification"
    </Key>
    <Key "Objects/7/Object/Messages/Received/Notification">
      Type "counter"
      Instance "172.16.0.22-RxNotification"
    </Key>



    <Key "Objects/0/Object/TotalPrefixes">
      Type "gauge"
      Instance "192.16.0.11-TotalPrefixes"
    </Key>

    <Key "Objects/1/Object/TotalPrefixes">
      Type "gauge"
      Instance "192.16.0.13-TotalPrefixes"
    </Key>

    <Key "Objects/2/Object/TotalPrefixes">
      Type "gauge"
      Instance "192.16.0.15-TotalPrefixes"
    </Key>
    <Key "Objects/3/Object/TotalPrefixes">
      Type "gauge"
      Instance "192.16.0.17-TotalPrefixes"
    </Key>
 <Key "Objects/4/Object/TotalPrefixes">
      Type "gauge"
      Instance "192.16.0.19-TotalPrefixes"
    </Key>
    <Key "Objects/5/Object/TotalPrefixes">
      Type "gauge"
      Instance "172.16.0.2-TotalPrefixes"
    </Key>
    <Key "Objects/6/Object/TotalPrefixes">
      Type "gauge"
      Instance "172.16.0.12-TotalPrefixes"
    </Key>
    <Key "Objects/7/Object/TotalPrefixes">
      Type "gauge"
      Instance "172.16.0.22-TotalPrefixes"
    </Key>
  </URL>
</Plugin>

#<Plugin curl_json>
## See: http://wiki.apache.org/couchdb/Runtime_Statistics
#  <URL "http://localhost:5984/_stats">
#    Instance "httpd"
#    <Key "httpd/requests/count">
#      Type "http_requests"
#    </Key>
#
#    <Key "httpd_request_methods/*/count">
#      Type "http_request_methods"
#    </Key>
#
#    <Key "httpd_status_codes/*/count">
#      Type "http_response_codes"
#    </Key>
#  </URL>
## Database status metrics:
#  <URL "http://localhost:5984/_all_dbs">
#    Instance "dbs"
#    <Key "*/doc_count">
#      Type "gauge"
#    </Key>
#    <Key "*/doc_del_count">
#      Type "counter"
#    </Key>
#    <Key "*/disk_size">
#      Type "bytes"
#    </Key>
#  </URL>
#</Plugin>

#<Plugin "curl_xml">
#	<URL "http://localhost/stats.xml">
#		Host "my_host"
#		Instance "some_instance"
#		User "collectd"
#		Password "thaiNg0I"
#		VerifyPeer true
#		VerifyHost true
#		CACert "/path/to/ca.crt"
#
#		<XPath "table[@id=\"magic_level\"]/tr">
#			Type "magic_level"
#			InstancePrefix "prefix-"
#			InstanceFrom "td[1]"
#			ValuesFrom "td[2]/span[@class=\"level\"]"
#		</XPath>
#	</URL>
#</Plugin>

#<Plugin dbi>
#	<Query "num_of_customers">
#		Statement "SELECT 'customers' AS c_key, COUNT(*) AS c_value \
#				FROM customers_tbl"
#		MinVersion 40102
#		MaxVersion 50042
#		<Result>
#			Type "gauge"
#			InstancePrefix "customer"
#			InstancesFrom "c_key"
#			ValuesFrom "c_value"
#		</Result>
#	</Query>
#
#	<Database "customers_db">
#		Driver "mysql"
#		DriverOption "host" "localhost"
#		DriverOption "username" "collectd"
#		DriverOption "password" "secret"
#		DriverOption "dbname" "custdb0"
#		SelectDB "custdb0"
#		Query "num_of_customers"
#		Query "..."
#		Host "..."
#	</Database>
#</Plugin>

<Plugin df>
	Device "/dev/sda3"
#	Device "192.16.0.2:/mnt/nfs"
	MountPoint "/"
	FSType "ext3"

	# ignore rootfs; else, the root file-system would appear twice, causing
	# one of the updates to fail and spam the log
	FSType rootfs
	# ignore the usual virtual / temporary file-systems
	FSType sysfs
	FSType proc
	FSType devtmpfs
	FSType devpts
	FSType tmpfs
	FSType fusectl
	FSType cgroup
	IgnoreSelected true

#	ReportByDevice false
#	ReportReserved false
#	ReportInodes false

	FSType proc
	FSType devtmpfs
	FSType devpts
	FSType tmpfs
	FSType fusectl
	FSType cgroup
	IgnoreSelected true

#	ReportByDevice false
#	ReportReserved false
#	ReportInodes false

#	ValuesAbsolute true
#	ValuesPercentage false
</Plugin>

#<Plugin disk>
#	Disk "hda"
#	Disk "/sda[23]/"
#	IgnoreSelected false
#</Plugin>

#<Plugin dns>
#	Interface "eth0"
#	IgnoreSource "192.16.0.1"
#	SelectNumericQueryTypes false
#</Plugin>

#<Plugin email>
#	SocketFile "/var/run/collectd-email"
#	SocketGroup "collectd"
#	SocketPerms "0770"
#	MaxConns 5
#</Plugin>

#<Plugin ethstat>
#	Interface "eth0"
#	Map "rx_csum_offload_errors" "if_rx_errors" "checksum_offload"
#	Map "multicast" "if_multicast"
#	MappedOnly false
#</Plugin>

#<Plugin exec>
#	Exec user "/path/to/exec"
#	Exec "user:group" "/path/to/exec"
#	NotificationExec user "/path/to/exec"
#</Plugin>

#<Plugin filecount>
#	<Directory "/path/to/dir">
#		Instance "foodir"
#		Name "*.conf"
#		MTime "-5m"
#		Size "+10k"
#		Recursive true
#		IncludeHidden false
#	</Directory>
#</Plugin>

#<Plugin gmond>
#	MCReceivedFrom "239.2.11.71" "8649"
#
#	<Metric "swap_total">
#		Type "swap"
#		TypeInstance "total"
#		DataSource "value"
#	</Metric>
#
#	<Metric "swap_free">
#		Type "swap"
#		TypeInstance "free"
#		DataSource "value"
#	</Metric>
#</Plugin>

#<Plugin hddtemp>
#	Host "127.0.0.1"
#	Port 7634
#</Plugin>

<Plugin interface>
	Interface "eth0"
	IgnoreSelected false
</Plugin>

#<Plugin ipmi>
#	Sensor "some_sensor"
#	Sensor "another_one"
#	IgnoreSelected false
#	NotifySensorAdd false
#	NotifySensorRemove true
#	NotifySensorNotPresent false
#</Plugin>

#<Plugin iptables>
#	Chain "table" "chain"
#</Plugin>

#<Plugin irq>
#	Irq 7
#	Irq 8
#	Irq 9
#	IgnoreSelected true
#</Plugin>

#<Plugin java>
#	JVMArg "-verbose:jni"
#	JVMArg "-Djava.class.path=/usr/share/collectd/java/collectd-api.jar"
#
#	LoadPlugin "org.collectd.java.GenericJMX"
#	<Plugin "GenericJMX">
#		# See /usr/share/doc/collectd/examples/GenericJMX.conf
#		# for an example config.
#	</Plugin>
#</Plugin>

#<Plugin libvirt>
#	Connection "xen:///"
#	RefreshInterval 60
#	Domain "name"
#	BlockDevice "name:device"
#	InterfaceDevice "name:device"
#	IgnoreSelected false
#	HostnameFormat name
#	InterfaceFormat name
#</Plugin>

#<Plugin madwifi>
#	Interface "wlan0"
#	IgnoreSelected false
#	Source "SysFS"
#	WatchSet "None"
#	WatchAdd "node_octets"
#	WatchAdd "node_rssi"
#	WatchAdd "is_rx_acl"
#	WatchAdd "is_scan_active"
#</Plugin>

#<Plugin mbmon>
#	Host "127.0.0.1"
#	Port 411
#</Plugin>

#<Plugin md>
#	Device "/dev/md0"
#	IgnoreSelected false
#</Plugin>

#<Plugin memcachec>
#	<Page "plugin_instance">
#		Server "localhost"
#		Key "page_key"
#		<Match>
#			Regex "(\\d+) bytes sent"
#			ExcludeRegex "<lines to be excluded>"
#			DSType CounterAdd
#			Type "ipt_octets"
#			Instance "type_instance"
#		</Match>
#	</Page>
#</Plugin>

#<Plugin memcached>
#	<Instance "local">
#		Socket "/var/run/memcached.sock"
# or:
#		Host "127.0.0.1"
#		Port "11211"
#	</Instance>
#</Plugin>

#<Plugin modbus>
#	<Data "data_name">
#		RegisterBase 1234
#		RegisterType float
#		Type gauge
#		Instance "..."
#	</Data>
#
#	<Host "name">
#		Address "addr"
#		Port "1234"
#		Interval 60
#
#		<Slave 1>
#			Instance "foobar" # optional
#			Collect "data_name"
#		</Slave>
#	</Host>
#</Plugin>

#<Plugin mysql>
#	<Database db_name>
#		Host "database.serv.er"
#		Port "3306"
#		User "db_user"
#		Password "secret"
#		Database "db_name"
#		MasterStats true
#	</Database>
#
#	<Database db_name2>
#		Host "localhost"
#		Socket "/var/run/mysql/mysqld.sock"
#		SlaveStats true
#		SlaveNotifications true
#	</Database>
#</Plugin>

#<Plugin netlink>
#	Interface "All"
#	VerboseInterface "All"
#	QDisc "eth0" "pfifo_fast-1:0"
#	Class "ppp0" "htb-1:10"
#	Filter "ppp0" "u32-1:0"
#	IgnoreSelected false
#</Plugin>

#<Plugin network>
#	# client setup:
#	Server "ff18::efc0:4a42" "25826"
#	<Server "239.192.74.66" "25826">
#		SecurityLevel Encrypt
#		Username "user"
#		Password "secret"
#		Interface "eth0"
#	</Server>
#	TimeToLive "128"
#
#	# server setup:
#	Listen "ff18::efc0:4a42" "25826"
#	<Listen "239.192.74.66" "25826">
#		SecurityLevel Sign
#		AuthFile "/etc/collectd/passwd"
#		Interface "eth0"
#	</Listen>
#	MaxPacketSize 1024
#
#	# proxy setup (client and server as above):
#	Forward true
#
#	# statistics about the network plugin itself
#	ReportStats false
#
#	# "garbage collection"
#	CacheFlush 1800
#</Plugin>

#<Plugin nginx>
#	URL "http://localhost/status?auto"
#	User "www-user"
#	Password "secret"
#	VerifyPeer false
#	VerifyHost false
#	CACert "/etc/ssl/ca.crt"
#</Plugin>

#<Plugin notify_desktop>
#	OkayTimeout 1000
#	WarningTimeout 5000
#	FailureTimeout 0
#</Plugin>

#<Plugin notify_email>
#	SMTPServer "localhost"
#	SMTPPort 25
#	SMTPUser "my-username"
#	SMTPPassword "my-password"
#	From "collectd@main0server.com"
#	# <WARNING/FAILURE/OK> on <hostname>.
#	# Beware! Do not use not more than two placeholders (%)!
#	Subject "[collectd] %s on %s!"
#	Recipient "email1@domain1.net"
#	Recipient "email2@domain2.com"
#</Plugin>

#<Plugin ntpd>
#	Host "localhost"
#	Port 123
#	ReverseLookups false
#	IncludeUnitID true
#</Plugin>

#<Plugin nut>
#	UPS "upsname@hostname:port"
#</Plugin>

#<Plugin olsrd>
#	Host "127.0.0.1"
#	Port "2006"
#	CollectLinks "Summary"
#	CollectRoutes "Summary"
#	CollectTopology "Summary"
#</Plugin>

#<Plugin openvpn>
#	StatusFile "/etc/openvpn/openvpn-status.log"
#	ImprovedNamingSchema false
#	CollectCompression true
#	CollectIndividualUsers true
#	CollectUserCount false
#</Plugin>

#<Plugin perl>
#	IncludeDir "/my/include/path"
#	BaseName "Collectd::Plugins"
#	EnableDebugger ""
#	LoadPlugin Monitorus
#	LoadPlugin OpenVZ
#
#	<Plugin foo>
#		Foo "Bar"
#		Qux "Baz"
#	</Plugin>
#</Plugin>

#<Plugin pinba>
#	Address "::0"
#	Port "30002"
#	<View "name">
#		Host "host name"
#		Server "server name"
#		Script "script name"
#	<View>
#</Plugin>

<Plugin ping>
	Host "localhost"
	Interval 1.0
	Timeout 0.9
	TTL 255
</Plugin>

#<Plugin postgresql>
#	<Query magic>
#		Statement "SELECT magic FROM wizard WHERE host = $1;"
#		Param hostname
#
#		<Result>
#			Type gauge
#			InstancePrefix "magic"
#			ValuesFrom "magic"
#		</Result>
#	</Query>
#
#	<Query rt36_tickets>
#		Statement "SELECT COUNT(type) AS count, type \
#		                  FROM (SELECT CASE \
#		                               WHEN resolved = 'epoch' THEN 'open' \
#		                               ELSE 'resolved' END AS type \
#		                               FROM tickets) type \
#		                  GROUP BY type;"
#
#		<Result>
#			Type counter
#			InstancePrefix "rt36_tickets"
#			InstancesFrom "type"
#			ValuesFrom "count"
#		</Result>
#	</Query>
#
#	<Writer sqlstore>
#		# See /usr/share/doc/collectd-core/examples/postgresql/collectd_insert.sql for details
#		Statement "SELECT collectd_insert($1, $2, $3, $4, $5, $6, $7, $8, $9);"
#		StoreRates true
#	</Writer>
#
#	<Database foo>
#		Host "hostname"
#		Port 5432
#		User "username"
#		Password "secret"
#
#		SSLMode "prefer"
#		KRBSrvName "kerberos_service_name"
#
#		Query magic
#	</Database>
#
#	<Database bar>
#		Interval 60
#		Service "service_name"
#
#		Query backend # predefined
#		Query rt36_tickets
#	</Database>
#
#	<Database qux>
#		Service "collectd_store"
#		Writer sqlstore
#		# see collectd.conf(5) for details
#		CommitInterval 30
#	</Database>
#</Plugin>

#<Plugin powerdns>
#	<Server "server_name">
#		Collect "latency"
#		Collect "udp-answers" "udp-queries"
#		Socket "/var/run/pdns.controlsocket"
#	</Server>
#	<Recursor "recursor_name">
#		Collect "questions"
#		Collect "cache-hits" "cache-misses"
#		Socket "/var/run/pdns_recursor.controlsocket"
#	</Recursor>
#	LocalSocket "/opt/collectd/var/run/collectd-powerdns"
#</Plugin>

#<Plugin processes>
#	Process "name"
#	ProcessMatch "foobar" "/usr/bin/perl foobar\\.pl.*"
#</Plugin>

#<Plugin protocols>
#	Value "/^Tcp:/"
#	IgnoreSelected false
#</Plugin>

<Plugin python>
       ModulePath "/opt/flexswitch/sdk/py/"
       LogTraces true
       Interactive false
       Import collectd_bufferstat_python
       Import collectd_portstat_python
       Import collectd_bgpstat_python
       Import collectd_linkstat_python
       Import collectd_nhstat_python
       Import collectd_bfdstat_python

       <Module collectd_bufferstat_python>
              PluginName collectd_bufferstat_python
       </Module>
       <Module collectd_portstat_python>
              PluginName collectd_portstat_python
       </Module>
       <Module collectd_bgpstat_python>
              PluginName collectd_bgpstat_python
       </Module>
       <Module collectd_linkstat_python>
              PluginName collectd_linkstat_python
       </Module>
       <Module collectd_bfdstat_python>
              PluginName collectd_bfdstat_python
       </Module>
       <Module collectd_nhstat_python>
              PluginName collectd_nhstat_python
       </Module>
</Plugin>

#<Plugin rrdcached>
#	DaemonAddress "unix:/var/run/rrdcached.sock"
#	DataDir "/var/lib/rrdcached/db/collectd"
#	CreateFiles true
#	CreateFilesAsync false
#	CollectStatistics true
#
# The following settings are rather advanced
# and should usually not be touched:
#	StepSize 10
#	HeartBeat 20
#	RRARows 1200
#	RRATimespan 158112000
#	XFF 0.1
#</Plugin>

<Plugin rrdtool>
	DataDir "/var/lib/collectd/rrd"
#	CacheTimeout 120
#	CacheFlush 900
#	WritesPerSecond 30
#	CreateFilesAsync false
#	RandomTimeout 0
#
# The following settings are rather advanced
# and should usually not be touched:
#	StepSize 10
#	HeartBeat 20
#	RRARows 1200
#	RRATimespan 158112000
#	XFF 0.1
</Plugin>

#<Plugin sensors>
#	SensorConfigFile "/etc/sensors3.conf"
#	Sensor "it8712-isa-0290/temperature-temp1"
#	Sensor "it8712-isa-0290/fanspeed-fan3"
#	Sensor "it8712-isa-0290/voltage-in8"
#	IgnoreSelected false
#</Plugin>

# See /usr/share/doc/collectd/examples/snmp-data.conf.gz for a
# comprehensive sample configuration.
#<Plugin snmp>
#	<Data "powerplus_voltge_input">
#		Type "voltage"
#		Table false
#		Instance "input_line1"
#		Scale 0.1
#		Values "SNMPv2-SMI::enterprises.6050.5.4.1.1.2.1"
#	</Data>
#	<Data "hr_users">
#		Type "users"
#		Table false
#		Instance ""
#		Shift -1
#		Values "HOST-RESOURCES-MIB::hrSystemNumUsers.0"
#	</Data>
#	<Data "std_traffic">
#		Type "if_octets"
#		Table true
#		InstancePrefix "traffic"
#		Instance "IF-MIB::ifDescr"
#		Values "IF-MIB::ifInOctets" "IF-MIB::ifOutOctets"
#	</Data>
#
#	<Host "some.switch.mydomain.org">
#		Address "192.16.0.2"
#		Version 1
#		Community "community_string"
#		Collect "std_traffic"
#		Inverval 120
#	</Host>
#	<Host "some.server.mydomain.org">
#		Address "192.16.0.42"
#		Version 2
#		Community "another_string"
#		Collect "std_traffic" "hr_users"
#	</Host>
#	<Host "some.ups.mydomain.org">
#		Address "192.16.0.3"
#		Version 1
#		Community "more_communities"
#		Collect "powerplus_voltge_input"
#		Interval 300
#	</Host>
#</Plugin>

#<Plugin statsd>
#	Host "::"
#	Port "8125"
#	DeleteCounters false
#	DeleteTimers   false
#	DeleteGauges   false
#	DeleteSets     false
#	TimerPercentile 90.0
#</Plugin>

#<Plugin swap>
#	ReportByDevice false
#	ReportBytes true
#</Plugin>

#<Plugin table>
#	<Table "/proc/slabinfo">
#		Instance "slabinfo"
#		Separator " "
#		<Result>
#			Type gauge
#			InstancePrefix "active_objs"
#			InstancesFrom 0
#			ValuesFrom 1
#		</Result>
#		<Result>
#			Type gauge
#			InstancePrefix "objperslab"
#			InstancesFrom 0
#			ValuesFrom 4
#		</Result>
#	</Table>
#</Plugin>

#<Plugin "tail">
#	<File "/var/log/exim4/mainlog">
#		Instance "exim"
#		<Match>
#			Regex "S=([1-9][0-9]*)"
#			DSType "CounterAdd"
#			Type "ipt_bytes"
#			Instance "total"
#		</Match>
#		<Match>
#			Regex "\\<R=local_user\\>"
#			ExcludeRegex "\\<R=local_user\\>.*mail_spool defer"
#			DSType "CounterInc"
#			Type "counter"
#			Instance "local_user"
#		</Match>
#	</File>
#</Plugin>

#<Plugin "tail_csv">
#	<Metric "dropped">
#		Type "percent"
#		Instance "dropped"
#		ValueFrom 1
#	</Metric>
#	<Metric "mbps">
#		Type "bytes"
#		Instance "wire-realtime"
#		ValueFrom 2
#	</Metric>
#	<Metric "alerts">
#		Type "alerts_per_second"
#		ValueFrom 3
#	</Metric>
#	<Metric "kpps">
#		Type "kpackets_wire_per_sec.realtime"
#		ValueFrom 4
#	</Metric>
#	<File "/var/log/snort/snort.stats">
#		Instance "snort-eth0"
#		Interval 600
#		Collect "dropped" "mbps" "alerts" "kpps"
#		TimeFrom 0
#	</File>
#</Plugin>

#<Plugin tcpconns>
#	ListeningPorts false
#	LocalPort "25"
#	RemotePort "25"
#</Plugin>

#<Plugin teamspeak2>
#	Host "127.0.0.1"
#	Port "51234"
#	Server "8767"
#</Plugin>

#<Plugin ted>
#	Device "/dev/ttyUSB0"
#	Retries 0
#</Plugin>

#<Plugin thermal>
#	ForceUseProcfs false
#	Device "THRM"
#	IgnoreSelected false
#</Plugin>

#<Plugin tokyotyrant>
#	Host "localhost"
#	Port "1978"
#</Plugin>

#<Plugin unixsock>
#	SocketFile "/var/run/collectd-unixsock"
#	SocketGroup "collectd"
#	SocketPerms "0660"
#	DeleteSocket false
#</Plugin>

#<Plugin uuid>
#	UUIDFile "/etc/uuid"
#</Plugin>

#<Plugin varnish>
#	<Instance>
#		CollectCache true
#		CollectBackend true
#		CollectBan false           # Varnish 3 only
#		CollectConnections true
#		CollectDirectorDNS false   # Varnish 3 only
#		CollectSHM true
#		CollectESI false
#		CollectFetch false
#		CollectHCB false
#		CollectObjects false
#		CollectPurge false         # Varnish 2 only
#		CollectSession false
#		CollectSMA false           # Varnish 2 only
#		CollectSMS false
#		CollectSM false            # Varnish 2 only
#		CollectStruct false
#		CollectTotals false
#		CollectUptime false
#		CollectdVCL false
#		CollectWorkers false
#	</Instance>
#
#	<Instance "myinstance">
#		CollectCache true
#	</Instance>
#</Plugin>

#<Plugin vmem>
#	Verbose false
#</Plugin>

<Plugin write_graphite>
	<Node "graphing">
		Host "10.1.10.252"
		Port "2003"
		Protocol "tcp"
		LogSendErrors true
		Prefix "collectd"
		Postfix "collectd"
		StoreRates true
		AlwaysAppendDS false
		EscapeCharacter "_"
	</Node>
</Plugin>

#<Plugin write_http>
#	<URL "http://example.com/collectd-post">
#		User "collectd"
#		Password "secret"
#		VerifyPeer true
#		VerifyHost true
#		CACert "/etc/ssl/ca.crt"
#		Format "Command"
#		StoreRates false
#	</URL>
#</Plugin>

<Include "/etc/collectd/collectd.conf.d">
	Filter "*.conf"
</Include>
